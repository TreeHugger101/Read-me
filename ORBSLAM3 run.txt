sudo apt update
sudo apt upgrade -y

sudo apt install -y \
    build-essential \
    cmake \
    git \
    libgtk-3-dev \
    pkg-config \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libtbb2 \
    libtbb-dev \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    libdc1394-22-dev \
    libeigen3-dev \
    libboost-all-dev \
    libsuitesparse-dev \
    libgl1-mesa-dev \
    libglew-dev \
    libpython3-dev \
    python3-dev \
    ffmpeg \
    unzip \
    wget

sudo apt install libopencv-dev python3-opencv
#check version 
pkg-config --modversion opencv4

cd ~
git clone https://github.com/UZ-SLAMLab/ORB_SLAM3.git
cd ORB_SLAM3
 
sudo apt update
sudo apt install cmake
sudo apt update
sudo apt install libeigen3-dev
sudo apt install libgl1-mesa-dev libegl1-mesa-dev
sudo apt install libepoxy-dev
sudo apt install python3-dev

(nano ~/Pangolin/CMakeLists.txt  
-> remove    
-Wno-null-pointer-arithmetic
-Wno-null-pointer-subtraction
-Wno-deprecated-register

add_compile_options(-Wall -Wextra) #-Werror)

)

sudo apt update
sudo apt install libglew-dev

cd ~
git clone https://github.com/stevenlovegrove/Pangolin.git
cd Pangolin
git checkout v0.6
mkdir build && cd build
cmake ..
make -j$(nproc)
sudo make install

sudo apt remove libopencv-dev python3-opencv
sudo apt update
sudo apt install -y \
    build-essential \
    cmake \
    git \
    pkg-config \
    libjpeg-dev \
    libtiff-dev \
    libpng-dev \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libv4l-dev \
    libxvidcore-dev \
    libx264-dev \
    libgtk-3-dev \
    libatlas-base-dev \
    gfortran \
    python3-dev
cd ~
wget -O opencv.zip https://github.com/opencv/opencv/archive/4.5.5.zip
wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.5.5.zip
unzip opencv.zip
unzip opencv_contrib.zip
mv opencv-4.5.5 opencv
mv opencv_contrib-4.5.5 opencv_contrib

cd ~/opencv
mkdir build && cd build

cmake -D CMAKE_BUILD_TYPE=RELEASE \
      -D CMAKE_INSTALL_PREFIX=/usr/local \
      -D OPENCV_GENERATE_PKGCONFIG=ON \
      -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules \
      -D BUILD_EXAMPLES=OFF ..

make -j$(nproc)
sudo make install
sudo ldconfig

sudo apt update
sudo apt install libboost-all-dev

cd ~/Pangolin
mkdir build && cd build
cmake .. -DCMAKE_BUILD_TYPE=Release
make -j$(nproc)
sudo make install
sudo apt install libboost-all-dev
sudo apt update
sudo apt install libssl-dev



cd ~/ORB_SLAM3
mkdir build && cd build

cmake .. \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_PREFIX_PATH="/usr/local" \
    -DPangolin_DIR="/home/aman/Pangolin/build" \
    -DOpenCV_DIR="/usr/local/lib/cmake/opencv4"

(make -j4)


cd ~/Datasets/EuRoC
wget -c http://robotics.ethz.ch/~asl-datasets/ijrr_euroc_mav_dataset/machine_hall/MH_01_easy/MH_01_easy.zip
mkdir MH_01_easy
unzip MH_01_easy.zip -d MH_01_easy

cd ORB_SLAM3
chmod +x build.sh
./build.sh




